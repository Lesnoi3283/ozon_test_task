// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type AddCommentResponse struct {
	Comment *Comment `json:"comment"`
	Error   string   `json:"error"`
}

type AddPostResponse struct {
	Post  *Post  `json:"post"`
	Error string `json:"error"`
}

type AddReplayResponse struct {
	Comment *Comment `json:"comment"`
	Error   string   `json:"error"`
}

type AuthResponse struct {
	Token string `json:"token"`
	Error string `json:"error"`
}

type Comment struct {
	ID        string             `json:"id"`
	Owner     *User              `json:"owner"`
	Text      string             `json:"text"`
	CreatedAt string             `json:"createdAt"`
	Replies   *CommentConnection `json:"replies"`
}

type CommentConnection struct {
	Edges    []*CommentEdge `json:"edges"`
	PageInfo *PageInfo      `json:"pageInfo"`
}

type CommentEdge struct {
	Cursor string   `json:"cursor"`
	Node   *Comment `json:"node"`
}

type Mutation struct {
}

type PageInfo struct {
	StartCursor *string `json:"startCursor,omitempty"`
	EndCursor   *string `json:"endCursor,omitempty"`
	HasNextPage bool    `json:"hasNextPage"`
}

type Post struct {
	ID              string             `json:"id"`
	Title           string             `json:"title"`
	Text            string             `json:"text"`
	Owner           *User              `json:"owner"`
	CommentsAllowed bool               `json:"commentsAllowed"`
	Comments        *CommentConnection `json:"comments"`
}

type PostConnection struct {
	Edges    []*PostEdge `json:"edges"`
	PageInfo *PageInfo   `json:"pageInfo"`
}

type PostEdge struct {
	Cursor string `json:"cursor"`
	Node   *Post  `json:"node"`
}

type Query struct {
}

type User struct {
	ID       string `json:"id"`
	Username string `json:"username"`
}
